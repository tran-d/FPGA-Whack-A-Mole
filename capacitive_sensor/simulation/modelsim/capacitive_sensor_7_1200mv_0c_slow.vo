// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "04/06/2018 13:57:31"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module skeleton (
	lcd_data,
	lcd_rw,
	lcd_en,
	lcd_rs,
	lcd_on,
	lcd_blon,
	CLOCK_50);
output 	[7:0] lcd_data;
output 	lcd_rw;
output 	lcd_en;
output 	lcd_rs;
output 	lcd_on;
output 	lcd_blon;
input 	CLOCK_50;

// Design Ports Information
// lcd_data[0]	=>  Location: PIN_L3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[1]	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[2]	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[3]	=>  Location: PIN_K7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[4]	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[5]	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[6]	=>  Location: PIN_M3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_data[7]	=>  Location: PIN_M5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_rw	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_en	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_rs	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_on	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// lcd_blon	=>  Location: PIN_L6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLOCK_50	=>  Location: PIN_Y2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("capacitive_sensor_7_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \CLOCK_50~input_o ;
wire \lcd_data[0]~output_o ;
wire \lcd_data[1]~output_o ;
wire \lcd_data[2]~output_o ;
wire \lcd_data[3]~output_o ;
wire \lcd_data[4]~output_o ;
wire \lcd_data[5]~output_o ;
wire \lcd_data[6]~output_o ;
wire \lcd_data[7]~output_o ;
wire \lcd_rw~output_o ;
wire \lcd_en~output_o ;
wire \lcd_rs~output_o ;
wire \lcd_on~output_o ;
wire \lcd_blon~output_o ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y52_N16
cycloneive_io_obuf \lcd_data[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[0]~output .bus_hold = "false";
defparam \lcd_data[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N9
cycloneive_io_obuf \lcd_data[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[1]~output .bus_hold = "false";
defparam \lcd_data[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N2
cycloneive_io_obuf \lcd_data[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[2]~output .bus_hold = "false";
defparam \lcd_data[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y49_N9
cycloneive_io_obuf \lcd_data[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[3]~output .bus_hold = "false";
defparam \lcd_data[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y54_N9
cycloneive_io_obuf \lcd_data[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[4]~output .bus_hold = "false";
defparam \lcd_data[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y55_N23
cycloneive_io_obuf \lcd_data[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[5]~output .bus_hold = "false";
defparam \lcd_data[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y51_N16
cycloneive_io_obuf \lcd_data[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[6]~output .bus_hold = "false";
defparam \lcd_data[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y47_N2
cycloneive_io_obuf \lcd_data[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_data[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_data[7]~output .bus_hold = "false";
defparam \lcd_data[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N23
cycloneive_io_obuf \lcd_rw~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_rw~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_rw~output .bus_hold = "false";
defparam \lcd_rw~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y52_N2
cycloneive_io_obuf \lcd_en~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_en~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_en~output .bus_hold = "false";
defparam \lcd_en~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N16
cycloneive_io_obuf \lcd_rs~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_rs~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_rs~output .bus_hold = "false";
defparam \lcd_rs~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y58_N16
cycloneive_io_obuf \lcd_on~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_on~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_on~output .bus_hold = "false";
defparam \lcd_on~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y47_N23
cycloneive_io_obuf \lcd_blon~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\lcd_blon~output_o ),
	.obar());
// synopsys translate_off
defparam \lcd_blon~output .bus_hold = "false";
defparam \lcd_blon~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N15
cycloneive_io_ibuf \CLOCK_50~input (
	.i(CLOCK_50),
	.ibar(gnd),
	.o(\CLOCK_50~input_o ));
// synopsys translate_off
defparam \CLOCK_50~input .bus_hold = "false";
defparam \CLOCK_50~input .simulate_z_as = "z";
// synopsys translate_on

assign lcd_data[0] = \lcd_data[0]~output_o ;

assign lcd_data[1] = \lcd_data[1]~output_o ;

assign lcd_data[2] = \lcd_data[2]~output_o ;

assign lcd_data[3] = \lcd_data[3]~output_o ;

assign lcd_data[4] = \lcd_data[4]~output_o ;

assign lcd_data[5] = \lcd_data[5]~output_o ;

assign lcd_data[6] = \lcd_data[6]~output_o ;

assign lcd_data[7] = \lcd_data[7]~output_o ;

assign lcd_rw = \lcd_rw~output_o ;

assign lcd_en = \lcd_en~output_o ;

assign lcd_rs = \lcd_rs~output_o ;

assign lcd_on = \lcd_on~output_o ;

assign lcd_blon = \lcd_blon~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
