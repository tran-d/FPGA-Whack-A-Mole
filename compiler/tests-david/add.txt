# Simple tester
# Tests instructions: sll
# ** Comments must have a space between "#"" and text **

addi $r1, $r0, 3 		# $r1 = 0 + 3 = 3				#2 3
addi $r3, $r1, 2 		# $r3 = 3 + 2 = 5				#3 4
sub  $r4, $r3, $r1 		# $r4 = 5 - 3 = 2				#4 5 
and  $r5, $r1, $r4		# $r5 = 3 & 2 = 2				#5 6
or   $r6, $r1, $r4		# $r6 = 3 | 2 = 3				#6 7
sll  $r7, $r6, 2		# $r7 = 3 * 4 = 12				#7 8
# sra  $r8, $r7, 1		# $r8 = 12 / 2 = 6				#8 9

# mul
# div 

sw $r7, 1($r1)			# MEM[3 + 1] = 12				#9 10
lw $r11, 1($r1)			# $r11 = MEM[3 + 1] = 12		#10 11

# j 0						# PC = 0						#11

# "cycles 30" runs the clock for 30 cycles before checking registers for correctness

cycles 15

# "checkreg A, B" checks register "A" for value "B".

 checkreg 1, 3
 checkreg 3, 5
 checkreg 4, 2
 checkreg 5, 2
 checkreg 6, 3
 checkreg 7, 12
 checkreg 11, 12
